{
  "openapi": "3.0.2",
  "info": {
    "description": "# Versioning\n## Definition\nSmarp supports a multi-version API, which means that multiple versions of our API could be available at the same time for API users.\n\nVersions are formated as  `v1`, `v2`, ... `vN`.\n\n## Breaking changes\nEach new Major version contains at least one breaking change compared to the previous version,\ntherefore no backward compatibility is guaranteed and adopting a new Major version will require developers’ adjustments to the breaking changes.\n\n### Breaking changes include:\n- Endpoints are removed or renamed\n- Parameters are removed, renamed or introduce a type change\n- New rules for request parameters are introduced. For example, when a parameter becomes mandatory\n- New rules for response parameters are introduced. For example, when a response parameter is omitted when empty, null or 0\n- Response codes are changed or removed\n\n## Non-Breaking changes\nNon-breaking changes of API can be applied by Smarp at any time to existing versions.\nPlease take this into consideration and refer to our latest documentation when implementing an application that uses Smarp’s API.\n\n### Non-breaking changes include:\n- New endpoints are added\n- New non-mandatory request parameters are added\n- New response parameters are added\n- Bug fixes\n\n## Available versions\n  List of avaialble versions:\n  - [v1](  https://smarp.github.io/v1/)\n\n## Example\nAccessing v1 endpoint\n```\nhttps://smarp.smarpshare.com/api/v1/ping\n```\n\n# Authentication\n## Create access token\nTo get an access token, please check if you have `Channel manager`, `Group Admin` or `Company Admin` role (Check your current role by clicking your avatar on the top right-hand corner of the page. Your role is displayed under your name)\n\n- Access your company domain settings using the following URL `https://{subdomain}.smarpshare.com/#/profile/settings`\n- Navigate to `Access token` tab on the left-side menu.\n> If you are `Channel manager`, `Group Admin` or `Company Admin` role but cannot see Access token tab, please contact our support team to enable Access token feature.\n- If you don't have an access token, please create one by pressing `Create new access token` button. Then give the name for the token that is easier for you to remember.\n\n## Using access token\n- If you already have an access token, press the button with copy icon (next to the token string).\n- To use an access token, you must put it to HTTP request header `Authorization`. Here is cURL example\n```\ncurl --request GET -H \"Authorization: Bearer <your-access-token>\" https://{subdomain}.smarpshare.com/api/{version}/allowed-access-token-api\n```\n- Any API having `access-token` as `Authorizations` option in this documentation is potentially usable with access token, depending on whether you have the requiste user role permission.\n",
    "version": "1",
    "title": "Smarp API Reference",
    "contact": {
      "name": "Tech Support",
      "url": "https://smarp.com/company/#contact-us",
      "email": "support@smarp.com"
    },
    "x-logo": {
      "url": "./img/smarp-logo.png"
    }
  },
  "servers": [
    {
      "url": "https://{subdomain}.smarpshare.com/api/v1",
      "description": "Base domain for API V1",
      "variables": {
        "subdomain": {
          "default": "login",
          "description": "this value is assigned by the service provider"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "ping",
      "description": "Check API availability"
    },
    {
      "name": "click",
      "description": "Click endpoints"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Check API availability",
        "description": "Endpoint for check availability of server",
        "responses": {
          "200": {
            "description": "Contains PONG response.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/clicks": {
      "get": {
        "tags": [
          "click"
        ],
        "summary": "Returns clicks generated from the posts shared by users to social media",
        "description": "Returns all clicks based on the period in which clicks happened.\n\nMaximum amount of results per request is 1000\n\nIn order to iterate throughout other results use `next` parameter. The value of `next` could be obtained in the result of request\n\nRole level required: `Company Admin`\n",
        "security": [
          {
            "access-token": []
          }
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Clicks that happened after this time will be returned. Date-time should be in RFC3339 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Clicks that happened at or before that time will be returned. Date-time should be in RFC3339 format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "next",
            "in": "query",
            "required": false,
            "description": "Link to the next batch of results",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of clicks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/GetClicksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClickItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the click"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the click happened"
          },
          "sharerId": {
            "type": "string",
            "description": "Id of the user that shared a post which generated the click"
          },
          "postId": {
            "type": "string",
            "description": "Id of the post that generated the click"
          },
          "socialNetwork": {
            "description": "Name of the social network where the click happened",
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "postId",
          "socialNetwork"
        ]
      },
      "GetClicksResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "next": {
                "type": "string",
                "description": "Link to the next batch of results. Empty in case no more results could be fetched"
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClickItem"
            }
          }
        },
        "required": [
          "meta",
          "data"
        ]
      },
      "ErrorEnvelope": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object"
          },
          "data": {
            "type": "object"
          },
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Status code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              }
            }
          }
        },
        "required": [
          "error"
        ]
      },
      "ObjectId": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{24}$"
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "access-token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
