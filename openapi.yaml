openapi: 3.0.2
info:
  description: |
    # Versioning
    ## Definition
    Smarp supports a multi-version API, which means that multiple versions of our API could be available at the same time for API users.

    Versions are formated as  `v1`, `v2`, ... `vN`.

    ## Breaking changes
    Each new Major version contains at least one breaking change compared to the previous version,
    therefore no backward compatibility is guaranteed and adopting a new Major version will require developers’ adjustments to the breaking changes.

    ### Breaking changes include:
    - Endpoints are removed or renamed
    - Parameters are removed, renamed or introduce a type change
    - New rules for request parameters are introduced. For example, when a parameter becomes mandatory
    - New rules for response parameters are introduced. For example, when a response parameter is omitted when empty, null or 0
    - Response codes are changed or removed

    ## Non-Breaking changes
    Non-breaking changes of API can be applied by Smarp at any time to existing versions.
    Please take this into consideration and refer to our latest documentation when implementing an application that uses Smarp’s API.

    ### Non-breaking changes include:
    - New endpoints are added
    - New non-mandatory request parameters are added
    - New response parameters are added
    - Bug fixes

    ## Available versions
      List of avaialble versions:
      - [v1](  https://smarp.github.io/v1/)

    ## Example
    Accessing v1 endpoint
    ```
    https://smarp.smarpshare.com/api/v1/ping
    ```

    # Authentication
    ## Create access token
    To get an access token, please check if you have `Channel manager`, `Group Admin` or `Company Admin` role (Check your current role by clicking your avatar on the top right-hand corner of the page. Your role is displayed under your name)

    - Access your company domain settings using the following URL `https://{subdomain}.smarpshare.com/#/profile/settings`
    - Navigate to `Access token` tab on the left-side menu.
    > If you are `Channel manager`, `Group Admin` or `Company Admin` role but cannot see Access token tab, please contact our support team to enable Access token feature.
    - If you don't have an access token, please create one by pressing `Create new access token` button. Then give the name for the token that is easier for you to remember.

    ## Using access token
    - If you already have an access token, press the button with copy icon (next to the token string).
    - To use an access token, you must put it to HTTP request header `Authorization`. Here is cURL example
    ```
    curl --request GET -H "Authorization: Bearer <your-access-token>" https://{subdomain}.smarpshare.com/api/{version}/allowed-access-token-api
    ```
    - Any API having `access-token` as `Authorizations` option in this documentation is potentially usable with access token, depending on whether you have the requiste user role permission.

    # Anonymity
    Some of the endpoints contain User ID or equivalent field in their reponses.

    However, certain records in the responses may omit User ID or equivalent for users who are anonymous on Smarp.

    ## When a user is considered anonymous
    - A user has chosen to be anonymous in his/her personal settings
    - A user belongs to a Group that is set to protect its Users from being identified in analytics due to compliance reasons.

    ## Example
    ```json
      // UserId is in the response because the user is not anonymised
      {
        "UserId": "393c69300000000000000000",
        "PostId": "263c69300000000000000000"
      }

      // UserId is not in the response because the user is anonymised
      {
        "PostId": "493c69300000000000000000"
      }

    ```

    # Requests and responses
    ## Pagination

    Some of the HTTP GET endpoints returns only portion of the requested data per request.

    Maximum amount of items returned per request is 1000.

    In order to iterate throughout other items use `next` parameter. The value of `next` could be obtained in the result of request.

    ### Example
    Accessing [GET posts](#tag/posts) v1 endpoint.

    First request
    ```
    https://smarp.smarpshare.com/api/v1/posts
    ```
    In the response there are 1000 items and link to the reference to the next request in `meta.next`

    ```
    {
      "meta": {
        "next": "510000000000000000000000"  <---- reference to the next request
      },
      "data": [
        {
          "id": "500000000000000000000000",
          "publishedAt": "2012-07-13T11:01:20Z",
          "title": "Post title N 1",
          "url": "https://someurl1",
          "type": "link"
        },
        ...
        {
          "id": "510000000000000000000000",
          "publishedAt": "2013-01-23T15:21:36Z",
          "title": "Post title N 1000",
          "url": "https://someurl1000",
          "type": "link"
        }
      ]
    }
    ```
    In order to get another batch of results send same `HTTP GET` request with `next` parameter.
    The value of `next` is taken from the results of the previous request.

    Second request

    ```
      https://smarp.smarpshare.com/api/v1/posts?next=510000000000000000000000
    ```

    In the response there is no `meta.next` value.

    It means that there is no more items to fetch, therefore there is no need to make any more calls.

       ```
       {
         "meta": {},
         "data": [
           {
             "id": "550000000000000000000000",
             "publishedAt": "2015-03-11T08:42:40Z",
             "title": "Post title N 1001",
             "url": "https://someurl1001",
             "type": "link"
           }
         ]
       }
       ```
  version: '1'
  title: Smarp API Reference
  contact:
    name: Tech Support
    url: 'https://smarp.com/company/#contact-us'
    email: support@smarp.com
  x-logo:
    url: ./img/smarp-logo.png
servers:
  - url: 'https://{subdomain}.smarpshare.com/api/v1'
    description: Base domain for API V1
    variables:
      subdomain:
        default: login
        description: this value is assigned by the service provider
tags:
  - name: ping
    description: Check API availability
  - name: clicks
    description: Clicks endpoints
  - name: posts
    description: Posts endpoints
  - name: shares
    description: Shares endpoints
  - name: teams
    description: Teams endpoints
paths:
  /ping:
    get:
      tags:
        - ping
      summary: Check API availability
      description: Endpoint for check availability of server
      responses:
        '200':
          description: Contains PONG response.
          content:
            text/plain:
              schema:
                type: string
  /clicks:
    get:
      tags:
        - clicks
      summary: Returns clicks generated from the posts shared by users to social media
      description: |
        Returns all clicks based on the period in which clicks happened.

        This Endpoint is a subject of [pagination](#section/Requests-and-responses/Pagination)

        Role level required: `Company Admin`

        #### Anonymity

        This endpoint supports user (sharerId) [Anonymity](#section/Anonymity)
      security:
        - access-token: []
      parameters:
        - name: from
          in: query
          description: Clicks that happened after this time will be returned. Date-time should be in RFC3339 format.
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Clicks that happened at or before that time will be returned. Date-time should be in RFC3339 format.
          required: false
          schema:
            type: string
            format: date-time
        - name: next
          in: query
          required: false
          description: Link to the next batch of results
          schema:
            type: string
      responses:
        '200':
          description: A list of clicks.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GetClicksResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Unauthorized request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '439':
          description: Quota of API requests was reached
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
  /posts:
    get:
      tags:
        - posts
      summary: Returns posts
      description: |
        Returns posts based on the period in which posts were published. Other criteria:

        - Posts that have been deleted will not be returned.
        - Posts that were published in private channels will not be returned.

        Endpoint is a subject of [pagination](#section/Requests-and-responses/Pagination)

        Role level required: `Company Admin`
      security:
        - access-token: []
      parameters:
        - name: from
          in: query
          description: Posts that were published after this time will be returned. Date-time should be in RFC3339 format.
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Posts that were published at or before that time will be returned. Date-time should be in RFC3339 format.
          required: false
          schema:
            type: string
            format: date-time
        - name: next
          in: query
          required: false
          description: Link to the next batch of results.
          schema:
            type: string
      responses:
        '200':
          description: A list of posts.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GetPostsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Unauthorized request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '439':
          description: Quota of API requests was reached
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
  /shares:
    get:
      tags:
        - shares
      summary: Returns shares
      description: |
        Returns all shared shares based on the period in which share was done.

        This Endpoint is a subject of [pagination](#section/Requests-and-responses/Pagination)

        Role level required: `Company Admin`

        #### Anonymity

        This endpoint supports user (sharerId) [Anonymity](#section/Anonymity)
      security:
        - access-token: []
      parameters:
        - name: from
          in: query
          description: Shares that created after this time will be returned. Date-time should be in RFC3339 format.
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Shares that created at or before that time will be returned. Date-time should be in RFC3339 format.
          required: false
          schema:
            type: string
            format: date-time
        - name: next
          in: query
          required: false
          description: Link to the next batch of results
          schema:
            type: string
      responses:
        '200':
          description: A list of shares.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GetSharesResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Unauthorized request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '439':
          description: Quota of API requests was reached
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
  /teams:
    get:
      tags:
        - teams
      summary: Returns teams
      description: |
        Returns all teams in the instance.

        This Endpoint is a subject of [pagination](#section/Requests-and-responses/Pagination)

        Role level required: `Company Admin`
      security:
        - access-token: []
      parameters:
        - name: next
          in: query
          required: false
          description: Link to the next batch of results
          schema:
            type: string
      responses:
        '200':
          description: A list of teams.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GetTeamsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Unauthorized request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '439':
          description: Quota of API requests was reached
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorEnvelope'
components:
  schemas:
    ClickItem:
      type: object
      properties:
        id:
          type: string
          description: Id of the click
        createdAt:
          type: string
          format: date-time
          description: Time when the click happened
        sharerId:
          type: string
          description: Id of the user that shared a post which generated the click
        postId:
          type: string
          description: Id of the post that generated the click
        socialNetwork:
          description: Name of the social network where the click happened
          type: string
      required:
        - id
        - createdAt
        - postId
        - socialNetwork
    GetClicksResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            next:
              type: string
              description: Link to the next batch of results. Empty in case no more results could be fetched
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClickItem'
      required:
        - meta
        - data
    PostItem:
      type: object
      properties:
        id:
          type: string
          description: Id of the post
        publishedAt:
          type: string
          format: date-time
          description: Time when the post was published
        title:
          type: string
          description: Title of the post
        url:
          type: string
          description: URL of the post if the post is a Link-type post
        type:
          description: Type of the post
          enum:
            - article
            - link
            - image
            - video
          type: string
      required:
        - id
        - publishedAt
        - title
        - url
        - type
    GetPostsResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            next:
              type: string
              description: Link to the next batch of results. Empty in case no more results could be fetched
        data:
          type: array
          items:
            $ref: '#/components/schemas/PostItem'
      required:
        - meta
        - data
    ShareItem:
      type: object
      properties:
        id:
          type: string
          description: Id of the share
        sharedAt:
          type: string
          format: date-time
          description: Time when the share happened
        sharerId:
          type: string
          description: Id of the user that shared a post which generated the share
        postId:
          type: string
          description: Id of the post that generated the share
        socialNetwork:
          description: Name of the social network where the share happened
          type: string
        uniqueClickCount:
          description: Total count of uniques clicks on social media
          type: ineteger
        likeCount:
          description: Total count of likes on social media
          type: ineteger
        commentCount:
          description: Total count of comments on social media
          type: ineteger
        reshareCount:
          description: Total count of re-shares on social media
          type: ineteger
      required:
        - id
        - sharedAt
        - postId
        - socialNetwork
        - uniqueClickCount
        - likeCount
        - commentCount
        - reshareCount
    GetSharesResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            next:
              type: string
              description: Link to the next batch of results. Empty in case no more results could be fetched
        data:
          type: array
          items:
            $ref: '#/components/schemas/ShareItem'
      required:
        - meta
        - data
    TeamItem:
      type: object
      properties:
        id:
          type: string
          description: Id of the team
        name:
          type: string
          description: Name of the team
        groupId:
          type: string
          description: ID of the Group that the team belongs to
      required:
        - id
        - name
        - groupId
    GetTeamsResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            next:
              type: string
              description: Link to the next batch of results. Empty in case no more results could be fetched
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamItem'
      required:
        - meta
        - data
    ErrorEnvelope:
      type: object
      properties:
        meta:
          type: object
        data:
          type: object
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Status code
            message:
              type: string
              description: Error message
      required:
        - error
    ObjectId:
      type: string
      pattern: '^[0-9a-fA-F]{24}$'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    access-token:
      type: http
      scheme: bearer
